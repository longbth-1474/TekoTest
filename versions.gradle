def build_versions = [:]
build_versions.min_sdk = 21
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
ext.build_versions = build_versions

ext.deps = [:]
def versions = [:]
versions.android_gradle_plugin = "3.2.1"
versions.gms = "4.1.0"
versions.arch_core = "2.0.0"
versions.dagger = "2.16"
versions.support = "1.0.0"
versions.paging = "2.1.0-beta01"
versions.room = "2.1.0-alpha02"
versions.rxjava2 = "2.1.3"
versions.rx_android = "2.0.1"
versions.okhttp_logging_interceptor = "3.9.0"
versions.constraintlayout = "2.0.0-alpha1"
versions.lifecycle = "2.0.0"
versions.multidex = "1.0.3"
versions.fan = '1.0.2'
versions.crashlytics = '2.9.8'
versions.calligraphyVersion = '2.2.0'
versions.glide = '3.7.0'
versions.custom_tab = '28.0.0'
versions.legacy = '1.0.0'
versions.gms_play_service = '15.0.0'

def deps = [:]
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.gms = "com.google.gms:google-services:$versions.gms"
deps.play_service = "com.google.android.gms:play-services-auth:$versions.gms_play_service"

def multidex = [:]
multidex.runtime = "com.android.support:multidex:$versions.multidex"
deps.multidex = multidex

def support = [:]
support.annotations = "androidx.annotation:annotation:$versions.support"
support.app_compat = "androidx.appcompat:appcompat:$versions.support"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.support"
support.cardview = "androidx.cardview:cardview:$versions.support"
support.design = "com.google.android.material:material:$versions.support"
support.v4 = "androidx.legacy:legacy-support-v4:$versions.support"
support.core_utils = "androidx.legacy:legacy-support-core-utils:$versions.support"
support.constraintlayout = "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
support.paging = "androidx.paging:paging-runtime:$versions.paging"
support.custom_tab = "com.android.support:customtabs:$versions.custom_tab"
support.legacy = "androidx.legacy:legacy-support-v4:$versions.legacy"
deps.support = support


def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.reactstreams = "androidx.lifecycle:lifecycle-reactivestreams:$versions.lifecycle"
deps.lifecycle = lifecycle

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

def arch_core = [:]
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def rx = [:]
rx.java2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
rx.android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.rx = rx

def fan = [:]
fan.runtime = "com.amitshekhar.android:rx2-android-networking:$versions.fan"
deps.fan = fan
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
deps.glide = glide

def font = [:]
font.calligraphyVersion = "uk.co.chrisjenx:calligraphy:$versions.calligraphyVersion"
deps.font = font

ext.deps = deps

static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url "https://jitpack.io" }
    handler.mavenCentral()
    handler.flatDir { dirs 'libs' }
}

ext.addRepos = this.&addRepos